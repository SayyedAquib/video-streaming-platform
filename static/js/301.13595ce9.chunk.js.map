{"version":3,"file":"static/js/301.13595ce9.chunk.js","mappings":"+NAuBA,MArBA,SAAwBA,GAAY,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAARC,EAAIR,EAAJQ,KAEnBC,EAAQ,IAAIC,KAAS,OAAJF,QAAI,IAAJA,GAAa,QAATP,EAAJO,EAAMG,eAAO,IAAAV,OAAT,EAAJA,EAAeW,aAEtC,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,OACEF,UAAU,yCACVG,IAAI,YACJC,IAAS,OAAJV,QAAI,IAAJA,GAAa,QAATN,EAAJM,EAAMG,eAAO,IAAAT,GAAY,QAAZC,EAAbD,EAAeiB,kBAAU,IAAAhB,GAAQ,QAARC,EAAzBD,EAA2BiB,cAAM,IAAAhB,OAA7B,EAAJA,EAAmCiB,OAE1CR,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kBAAiBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4BAA2BC,SAAM,OAAJP,QAAI,IAAJA,GAAa,QAATH,EAAJG,EAAMG,eAAO,IAAAN,OAAT,EAAJA,EAAeiB,SAC1DN,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SAAEN,EAAMc,oBACpCP,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAM,OAAJP,QAAI,IAAJA,GAAa,QAATF,EAAJE,EAAMG,eAAO,IAAAL,OAAT,EAAJA,EAAekB,gBAC1CR,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SAAM,OAAJP,QAAI,IAAJA,GAAa,QAATD,EAAJC,EAAMG,eAAO,IAAAJ,OAAT,EAAJA,EAAekB,mBAIrD,ECeA,MA/BA,WACE,IAAAC,GAAiBC,EAAAA,EAAAA,MACXC,GAD4BC,EAAAA,EAAAA,GAAAH,EAAA,GAArB,GACeI,IAAI,gBAEhCC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAJ,EAAAA,EAAAA,GAAAE,EAAA,GAA7CG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IAEpCG,EAAAA,EAAAA,YAAU,WACRC,GACF,GAAG,CAACT,IAEJ,IAAMS,EAAgB,eAAArC,GAAAsC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACAC,MAAM,yHAADC,OAC+FrB,IACzH,KAAD,EAFa,OAARc,EAAQG,EAAAK,KAAAL,EAAAE,KAAA,EAGKL,EAASS,OAAO,KAAD,EAA5BR,EAAIE,EAAAK,KACVf,EAAgBQ,EAAKS,OAAO,wBAAAP,EAAAQ,OAAA,GAAAZ,EAAA,KAC7B,kBANqB,OAAAzC,EAAAsD,MAAA,KAAAC,UAAA,KAQtB,OACEvC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mDAAkDC,SAC9DmB,EAAasB,KAAI,SAACC,GAAW,OAC5BzC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAI,CAEHC,GAAI,YAAcF,EAAYG,GAAGC,QAAQ9C,UACvCC,EAAAA,EAAAA,KAAC8C,EAAe,CAACtD,KAAMiD,KAFpBA,EAAYG,GAAGC,QAGf,KAIf,C","sources":["components/SearchVideoCard.jsx","components/ResultsPage.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nfunction SearchVideoCard({ info }) {\r\n\r\n  const event = new Date(info?.snippet?.publishTime);\r\n\r\n  return (\r\n    <div className='p-2 m-2 shadow-lg rounded-lg flex'>\r\n      <img\r\n        className='rounded-lg w-auto h-[100%] object-fill'\r\n        alt='thumbnail'\r\n        src={info?.snippet?.thumbnails?.medium?.url}\r\n      />\r\n      <ul className='grid row-span-3'>\r\n        <li className='text-xl line-clamp-2 ml-2'>{info?.snippet?.title}</li>\r\n        <li className='ml-2 text-sm'>{event.toLocaleString()}</li>\r\n        <li className='ml-2 my-2'>{info?.snippet?.channelTitle}</li>\r\n        <li className='ml-2 text-sm'>{info?.snippet?.description}</li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchVideoCard","import React, { useEffect, useState } from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom';\r\nimport SearchVideoCard from './SearchVideoCard';\r\n\r\nfunction ResultsPage() {\r\n  const [params] = useSearchParams()\r\n  const search_query = params.get(\"search_query\")\r\n\r\n  const [searchVideos, setSearchVideos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getSearchResults()\r\n  }, [search_query]);\r\n\r\n  const getSearchResults = async () => {\r\n    const response = await fetch(\r\n      `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=50&key=AIzaSyDaajN0jChgIgEHwUkVTbzs3x40R4gMm2A&q=${search_query}`\r\n    );\r\n    const data = await response.json();\r\n    setSearchVideos(data.items);\r\n  };\r\n\r\n  return (\r\n    <div className='mt-20 flex flex-col mx-auto w-[1098px] h-[201px]'>\r\n      {searchVideos.map((searchVideo) => (\r\n        <Link\r\n          key={searchVideo.id.videoId}\r\n          to={\"/watch?v=\" + searchVideo.id.videoId}>\r\n            <SearchVideoCard info={searchVideo} />\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResultsPage\r\n"],"names":["_ref","_info$snippet","_info$snippet2","_info$snippet2$thumbn","_info$snippet2$thumbn2","_info$snippet3","_info$snippet4","_info$snippet5","info","event","Date","snippet","publishTime","_jsxs","className","children","_jsx","alt","src","thumbnails","medium","url","title","toLocaleString","channelTitle","description","_useSearchParams","useSearchParams","search_query","_slicedToArray","get","_useState","useState","_useState2","searchVideos","setSearchVideos","useEffect","getSearchResults","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","concat","sent","json","items","stop","apply","arguments","map","searchVideo","Link","to","id","videoId","SearchVideoCard"],"sourceRoot":""}